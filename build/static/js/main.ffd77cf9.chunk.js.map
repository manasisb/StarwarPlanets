{"version":3,"sources":["images/starwar_logo.png","components/Navbar.js","components/Button.js","components/Loading.js","components/Planets.js","images/arrow.gif","App.js","index.js"],"names":["Navbar","Segment","inverted","color","textAlign","Image","src","starwarlogo","size","centered","ShowResults","logdata","val","basic","Button","onClick","Loading","Dimmer","active","Loader","Planets","data","load","Container","style","border","Table","padded","Header","Row","className","HeaderCell","singleLine","Body","map","planet","i","Cell","name","population","rotation_period","orbital_period","diameter","climate","surface_water","App","useState","planets","setPlanets","loading","setLoading","show","setShow","planetsData","a","total_result","fetch","result","json","push","results","next","console","log","useEffect","arrow","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ffd77cf9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/starwar_logo.4e44b571.png\";","import React from 'react'\nimport {Segment, Image} from 'semantic-ui-react';\nimport starwarlogo from '../images/starwar_logo.png';\n\nfunction Navbar() {\n    return (\n        <Segment inverted color={'yellow'} textAlign=\"center\">\n            <Image src={starwarlogo} size={\"medium\"} centered/>\n        </Segment>\n    )\n}\n\nexport default Navbar;\n","import React from 'react'\nimport {Button, Segment} from 'semantic-ui-react';\n\nfunction ShowResults({logdata, val}) {\n\n    return (\n        <Segment basic textAlign='center'>\n            <Button basic onClick={logdata} color={'brown'} size={'large'}>\n                {val ? 'Click to hide results' : 'Click to see results'}\n            </Button>\n        </Segment>\n    )\n}\n\nexport default ShowResults;\n","import React from 'react'\nimport { Dimmer, Loader } from 'semantic-ui-react'\n\nfunction Loading() {\n    return (\n        <div>\n            <Dimmer active inverted>\n                <Loader>Loading</Loader>\n            </Dimmer>\n            \n        </div>\n    )\n}\n\nexport default Loading;\n","import React from 'react'\nimport { Table, Container } from 'semantic-ui-react';\nimport Loading from './Loading';\n\nfunction Planets({data, load}) {\n    return (\n        <div>\n        <Container>\n            {load ? <Loading/> :\n        <div style={{border:'3px solid black'}}>\n        <Table padded>\n        <Table.Header>\n        <Table.Row className=\"ui definition\">\n            <Table.HeaderCell singleLine>Name</Table.HeaderCell>\n            <Table.HeaderCell>Population</Table.HeaderCell>\n            <Table.HeaderCell>Rotation Period</Table.HeaderCell>\n            <Table.HeaderCell>Orbital Period</Table.HeaderCell>\n            <Table.HeaderCell>Daimeter</Table.HeaderCell>\n            <Table.HeaderCell>Climate</Table.HeaderCell>\n            <Table.HeaderCell>Surface Water</Table.HeaderCell>\n        </Table.Row>\n        </Table.Header>\n        <Table.Body>\n        {data.map((planet, i) => {\n            return (\n            <Table.Row key={i}>\n                <Table.Cell>{planet.name}</Table.Cell>\n                <Table.Cell>{planet.population}</Table.Cell>\n                <Table.Cell>{planet.rotation_period}</Table.Cell>\n                <Table.Cell>{planet.orbital_period}</Table.Cell>\n                <Table.Cell>{planet.diameter}</Table.Cell>\n                <Table.Cell>{planet.climate}</Table.Cell>\n                <Table.Cell>{planet.surface_water}</Table.Cell>\n            </Table.Row>\n        )})}\n        </Table.Body>\n    </Table>\n    </div>\n     }\n    </Container>\n        </div>\n    )\n}\n\nexport default Planets;\n","export default __webpack_public_path__ + \"static/media/arrow.5b715238.gif\";","import React, {useState, useEffect} from 'react';\nimport Navbar from './components/Navbar';\nimport ShowResults from \"./components/Button\";\nimport Planets from './components/Planets';\nimport arrow from '../src/images/arrow.gif';\nimport {Image} from 'semantic-ui-react';\n\nfunction App() {\n  const [planets, setPlanets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [show, setShow] = useState(false); \n\n  const planetsData = async () =>{\n    try{\n      setLoading(true)\n      let total_result = []\n      let result = await fetch('https://swapi.dev/api/planets/')\n      let data = await result.json();\n      total_result.push(...data.results)\n      while (data.next) {\n        result = await fetch(data.next)\n        data = await result.json()\n        total_result.push(...data.results)\n      }\n      setPlanets(total_result);\n    }catch(e){\n      console.log(e)\n    }\n  }\n\n  useEffect(() => {\n    planetsData()\n    setLoading(false)\n  },[]);\n\n  function handleClick(){\n    setShow(!show)\n  }\n\n  return (\n    <div>\n      <Navbar />\n      <ShowResults logdata={handleClick} val={show}/>\n      {show ? (<Planets data={planets} load={loading}/>\n      ) : (\n        <Image src={arrow} centered/>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}